---
- import_playbook: helper/env.yml
- import_playbook: helper/load_state.yml

- hosts: localhost
  tasks:
    - file:
        path: "{{ workdir }}"
        state: directory
    - name: check the state status
      fail: msg="nodes are already started"
      when: 
        - last_state['status'] == "started"
        - group_nodes_started
        - not(forced|default(false)|bool)
      vars:
        ngroup: "{{ node_group | default('nodes') }}"
        group_nodes_started: >-
          {{
            last_state['spawn_results'] 
            | dict2items 
            | selectattr('key', 'in', groups[ngroup]) 
            | map(attribute='value') 
            | map(attribute='status') 
            | select('equalto', 0) 
            | list 
            | length == groups[ngroup] | length
          }}

- name: start the nodes
  hosts: "{{ ngroup }}"
  tasks:
    - import_tasks: "{{ run_tasks | default('../app/run.yml') }}"
  vars:
    last_state: "{{ hostvars['localhost']['last_state'] }}"
    nid: "{{ host_idx | default(0) }}"
    ngroup: "{{ node_group | default('nodes') }}"
    testbed: "{{ (testbed_prefix, run_id, nid, '') | path_join }}"

- hosts: localhost
  tasks:
    - set_fact:
        cur_state: "{{ last_state | combine({'status': 'started'}) }}"
- import_playbook: helper/update_spawn_state.yml
  vars:
    ngroup: "{{ node_group | default('nodes') }}"
- import_playbook: helper/save_state.yml
